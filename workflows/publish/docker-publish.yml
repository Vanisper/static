# 此 Publish 工作流用于构建和推送 Docker 镜像到 Docker Hub
# ---
# 需要在 GitHub 仓库的 Secrets 中设置以下变量:
# - DOCKER_USERNAME: Docker Hub 用户名
# - DOCKER_PASSWORD: Docker Hub 密码
# ---
# 需要在当前工作流文件中配置以下变量:
# - DOCKERFILE_PATH: Dockerfile 文件路径（例如 ./docker/Dockerfile）
# - DOCKER_CONTEXT: Dockerfile 上下文（例如 . 或 ./docker）
# - DOCKER_IMAGE_NAME: Docker 镜像名称（规则是 <username>/<repository>）
# - DOCKER_IMAGE_TAG: Docker 镜像标签（例如 latest、v1.0 等）
# ---

name: Docker Build and Push

on:
  workflow_dispatch: # 手动触发事件
  push:
    branches:
      - main  # 可以根据您的需要修改触发的分支

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Docker Hub 用户名
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub 密码
  DOCKERFILE_PATH: "./docker/Dockerfile" # TODO: Dockerfile 文件路径，工作流中以项目根目录为基准路径
  DOCKER_CONTEXT: "." # TODO: Dockerfile 的上下文路径，与命令行执行时所处的目录有关，如使用上级目录作为上下文，则是 ".."
  DOCKER_IMAGE_NAME: <username>/<repository> # TODO: Docker 镜像名称
  DOCKER_IMAGE_TAG: "latest" # Docker 镜像标签，例如 latest、v1.0 等；但是考虑到拉取使用镜像时，消除标签的心智问题，默认使用 latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DOCKER_CONTEXT }} # Dockerfile 上下文
          file: ${{ env.DOCKERFILE_PATH }}  # Dockerfile 文件路径
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
